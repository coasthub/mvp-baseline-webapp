[{"/home/brunoluis08/Desktop/coasthub/mvp-frontend/src/reportWebVitals.js":"1","/home/brunoluis08/Desktop/coasthub/mvp-frontend/src/index.js":"2","/home/brunoluis08/Desktop/coasthub/mvp-frontend/src/App.js":"3","/home/brunoluis08/Desktop/coasthub/mvp-frontend/src/components/LoginForm.js":"4","/home/brunoluis08/Desktop/coasthub/mvp-frontend/src/firebase.js":"5","/home/brunoluis08/Desktop/coasthub/mvp-frontend/src/components/hero.js":"6"},{"size":362,"mtime":1606160004131,"results":"7","hashOfConfig":"8"},{"size":500,"mtime":1606160690710,"results":"9","hashOfConfig":"8"},{"size":2882,"mtime":1606185530553,"results":"10","hashOfConfig":"8"},{"size":2026,"mtime":1606183872984,"results":"11","hashOfConfig":"8"},{"size":570,"mtime":1606177283459,"results":"12","hashOfConfig":"8"},{"size":304,"mtime":1606185137765,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"86gfs6",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/brunoluis08/Desktop/coasthub/mvp-frontend/src/reportWebVitals.js",[],"/home/brunoluis08/Desktop/coasthub/mvp-frontend/src/index.js",[],["28","29"],"/home/brunoluis08/Desktop/coasthub/mvp-frontend/src/App.js",["30","31","32"],"import { React, useState , useEffect } from 'react'\nimport './styles/login-page.css'\nimport LoginForm from './components/LoginForm'\nimport fire from './firebase'\nimport Hero from './components/hero'\n\n\nfunction App(){\n\n    const [user,setUser] = useState(\"\")\n    const [email,setEmail] = useState(\"\")\n    const [password,setPassword] = useState(\"\")\n    const [emailError,setEmailError] = useState(\"\")\n    const [passwordError,setPasswordError] = useState(\"\")\n    const [hasAccount, setHasAccount] = useState(false)\n\n    const clearInputs = () => {\n        \n        setEmail('')\n        setPassword('')\n    }\n\n    const clearError = () => {\n        \n        setEmailError('')\n        setPasswordError('')\n    }\n\n    const handleLogin = () => {\n        \n        clearInputs()\n        clearError()\n\n        fire\n        .auth()\n            .signInWithEmailAndPassword(email,password)\n            .catch((error) => {\n               switch (error.code) {\n                   case \"auth/invalid-email\":\n                   case \"auth/user-not-found\":\n                    setEmailError(error.message)\n                       break;\n                   case \"auth/wrong-password\":\n                    setPasswordError(error.mesage)\n                       break;\n               }\n            })\n    }\n\n    const handleSignUp = () => {\n\n        clearInputs()\n        clearError()\n\n        fire\n            .auth()\n                .createUserWithEmailAndPassword(email,password)\n                .catch((error) => {\n                    switch (error.code) {\n                        case \"auth/email-already-in-use\":\n                        case \"auth/invalid-email\":\n                            setEmailError(error.message)\n                            break;\n                        case \"auth/weak-password\":\n                            setPasswordError(error.mesage)\n                            break;\n                }\n        })\n    }\n\n    const authListener = () => {\n        fire.auth().onAuthStateChanged(user => {\n            if(user){\n                clearInputs()\n                setUser(user)\n            }else{\n                setUser('')\n            }\n        })\n    }\n\n    const handleLogout = () => {\n       \n        fire.auth().signOut()\n    }\n\n    useEffect(() => {\n        authListener()\n    }, [])\n\n    return (\n        <div className=\"App\">\n        {user ? (\n            <Hero handleLogout={handleLogout}/>  \n        ) : (\n            <LoginForm\n            email={email}\n            setEmail={setEmail}\n            password={password}\n            setPassword={setPassword}\n            handleLogin={handleLogin}\n            handleSignUp={handleSignUp}\n            hasAccount={hasAccount}\n            setHasAccount={setHasAccount}\n            emailError={emailError}\n            passwordError={passwordError}\n            />   \n        )}\n        </div>\n    )\n}\n\nexport default App","/home/brunoluis08/Desktop/coasthub/mvp-frontend/src/components/LoginForm.js",["33"],"/home/brunoluis08/Desktop/coasthub/mvp-frontend/src/firebase.js",[],"/home/brunoluis08/Desktop/coasthub/mvp-frontend/src/components/hero.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":38,"column":16,"nodeType":"40","messageId":"41","endLine":46,"endColumn":17},{"ruleId":"38","severity":1,"message":"39","line":59,"column":21,"nodeType":"40","messageId":"41","endLine":67,"endColumn":18},{"ruleId":"42","severity":1,"message":"43","line":89,"column":8,"nodeType":"44","endLine":89,"endColumn":10,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":16},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["52"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [authListener]",{"range":"55","text":"56"},[2296,2298],"[authListener]"]